{"version":3,"sources":["../lib/p5.gui.js"],"names":["guis","sliderMin","sliderMax","sliderStep","guiProvider","p5","prototype","createGui","label","x","y","provider","gui","QuickSettings","console","log","QSGui","DummyGui","push","removeGui","sliderRange","vmin","vmax","vstep","noLoop","_loop","i","length","loop","_draw","qs","create","addGlobals","bindGlobals","arguments","addObject","object","params","Array","slice","call","keys","bindParams","setGlobalChangeHandler","draw","show","hide","toggleVisibility","f","arg","val","typ","c","color","c2","levels","vcolor","map","value","toString","join","bindColor","bindDropDown","min","max","bindRange","HEX6","test","bindText","bindBoolean","window"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,CAAC,YAAW;;AAEV;AACA,MAAIA,OAAO,EAAX;;AAEA;AACA,MAAIC,YAAY,CAAhB;AACA,MAAIC,YAAY,GAAhB;AACA,MAAIC,aAAa,CAAjB;;AAEA;AACA,MAAIC,cAAc,eAAlB;;AAEA;AACAC,KAAGC,SAAH,CAAaC,SAAb,GAAyB,UAASC,KAAT,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,QAAtB,EAAgC;;AAEvDH,YAAQA,SAAS,KAAjB;AACAC,QAAIA,KAAK,EAAT;AACAC,QAAIA,KAAK,EAAT;AACAC,eAAWA,YAAYP,WAAvB;;AAEA,QAAIQ,GAAJ;;AAEA;AACA,QAAGD,aAAa,eAAhB,EAAiC;AAC/B,UAAGE,aAAH,EAAkB;AAChBC,gBAAQC,GAAR,CAAY,2CAAZ;AACAH,cAAM,IAAII,KAAJ,CAAUR,KAAV,EAAiBC,CAAjB,EAAoBC,CAApB,CAAN;AACD,OAHD,MAGO;AACLI,gBAAQC,GAAR,CAAY,+DAAZ;AACAH,cAAM,IAAIK,QAAJ,CAAaT,KAAb,EAAoBC,CAApB,EAAuBC,CAAvB,CAAN;AACD;AACF,KARD,MAQO;AACLI,cAAQC,GAAR,CAAY,0BAA0BJ,QAAtC;AACAC,YAAM,IAAIK,QAAJ,CAAaT,KAAb,EAAoBC,CAApB,EAAuBC,CAAvB,CAAN;AACD;;AAED;AACAV,SAAKkB,IAAL,CAAUN,GAAV;;AAEA;AACA,WAAOA,GAAP;AAED,GA7BD;;AAgCAP,KAAGC,SAAH,CAAaa,SAAb,GAAyB,UAASP,GAAT,EAAc;AACrC;AACD,GAFD;;AAIA;AACAP,KAAGC,SAAH,CAAac,WAAb,GAA2B,UAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4B;AACrDtB,gBAAYoB,IAAZ;AACAnB,gBAAYoB,IAAZ;AACAnB,iBAAaoB,KAAb;AACD,GAJD;;AAMA;AACAlB,KAAGC,SAAH,CAAakB,MAAb,GAAsB,YAAW;AAC/B,SAAKC,KAAL,GAAa,KAAb;AACA,SAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI1B,KAAK2B,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC1B,WAAK0B,CAAL,EAAQF,MAAR;AACD;AACF,GALD;;AAOA;AACAnB,KAAGC,SAAH,CAAasB,IAAb,GAAoB,YAAW;AAC7B,SAAI,IAAIF,IAAI,CAAZ,EAAeA,IAAI1B,KAAK2B,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC1B,WAAK0B,CAAL,EAAQE,IAAR;AACD;AACD,SAAKH,KAAL,GAAa,IAAb;AACA,SAAKI,KAAL;AACD,GAND;;AASA;AACA,WAASb,KAAT,CAAeR,KAAf,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;;AAE1B,QAAIoB,KAAKjB,cAAckB,MAAd,CAAqBtB,CAArB,EAAwBC,CAAxB,EAA2BF,KAA3B,CAAT;AACA,SAAKF,SAAL,GAAiBwB,EAAjB;;AAEA;AACA,SAAKE,UAAL,GAAkB,YAAW;AAC3BF,SAAGG,WAAH,CAAeC,SAAf;AACD,KAFD;;AAIA;AACA;AACA,SAAKC,SAAL,GAAiB,YAAW;AAC1B;AACAC,eAASF,UAAU,CAAV,CAAT;AACA;AACA,UAAIG,SAAS,EAAb;AACA,UAAGH,UAAUP,MAAV,GAAmB,CAAtB,EAAyB;AACvBU,iBAASC,MAAMhC,SAAN,CAAgBiC,KAAhB,CAAsBC,IAAtB,CAA2BN,SAA3B,CAAT;AACAG,iBAASA,OAAOE,KAAP,CAAa,CAAb,CAAT;AACD;AACD;AACA,UAAGF,OAAOV,MAAP,KAAkB,CAArB,EAAwB;AACtBU,iBAASD,OAAOK,IAAP,EAAT;AACD;AACDX,SAAGY,UAAH,CAAcN,MAAd,EAAsBC,MAAtB;AACD,KAdD;;AAgBA;AACA,SAAKb,MAAL,GAAc,YAAW;AACvBM,SAAGa,sBAAH,CAA0BC,IAA1B;AACD,KAFD;;AAIA,SAAKhB,IAAL,GAAY,YAAW;AACrBE,SAAGa,sBAAH,CAA0B,IAA1B;AACD,KAFD;;AAIA,SAAKE,IAAL,GAAY,YAAW;AAAEf,SAAGe,IAAH;AAAY,KAArC;AACA,SAAKC,IAAL,GAAY,YAAW;AAAEhB,SAAGgB,IAAH;AAAY,KAArC;AACA,SAAKC,gBAAL,GAAwB,YAAW;AAAEjB,SAAGiB,gBAAH;AAAwB,KAA7D;AAED;;AAED;AACA,WAAS9B,QAAT,GAAoB;AAClB,QAAI+B,IAAI,SAAJA,CAAI,GAAW,CAAE,CAArB;AACA,SAAKhB,UAAL,GAAkBgB,CAAlB;AACA,SAAKxB,MAAL,GAAcwB,CAAd;AACA,SAAKb,SAAL,GAAiBa,CAAjB;AACA,SAAKH,IAAL,GAAYG,CAAZ;AACD;;AAED;AACA;AACAnC,gBAAc6B,UAAd,GAA2B,UAASN,MAAT,EAAiBC,MAAjB,EAAyB;;AAElD;AACA,SAAI,IAAIX,IAAI,CAAZ,EAAeA,IAAIW,OAAOV,MAA1B,EAAkCD,GAAlC,EAAuC;;AAErC,UAAIuB,MAAMZ,OAAOX,CAAP,CAAV;AACA,UAAIwB,MAAMd,OAAOa,GAAP,CAAV;AACA,UAAIE,aAAaD,GAAb,yCAAaA,GAAb,CAAJ;;AAEA;;AAEA,cAAOC,GAAP;;AAEE,aAAK,QAAL;;AAEE;AACA,cAAGD,eAAeZ,KAAf,IAAwBY,IAAIvB,MAAJ,KAAe,CAAvC,IAA4C,OAAOuB,IAAI,CAAJ,CAAP,KAAkB,QAAjE,EAA2E;AACzE;AACA,gBAAIE,IAAIC,MAAMH,IAAI,CAAJ,CAAN,EAAcA,IAAI,CAAJ,CAAd,EAAsBA,IAAI,CAAJ,CAAtB,CAAR;AACA;AACA,gBAAII,KAAKF,EAAEG,MAAF,CAAShB,KAAT,CAAe,CAAf,EAAiB,CAAjB,CAAT;AACA;AACA,gBAAIiB,SAAS,MAAMF,GAAGG,GAAH,CAAO,UAASC,KAAT,EAAgB;AACxC,qBAAO,CAAC,MAAMA,MAAMC,QAAN,CAAe,EAAf,CAAP,EAA2BpB,KAA3B,CAAiC,CAAC,CAAlC,CAAP;AACD,aAFkB,EAEhBqB,IAFgB,CAEX,EAFW,CAAnB;AAGA,iBAAKC,SAAL,CAAeZ,GAAf,EAAoBO,MAApB,EAA4BpB,MAA5B;AACD,WAVD,MAUO;AACL;AACA,iBAAK0B,YAAL,CAAkBb,GAAlB,EAAuBC,GAAvB,EAA4Bd,MAA5B;AACAA,mBAAOa,GAAP,IAAcC,IAAI,CAAJ,CAAd;AACD;AACD;;AAEF,aAAK,QAAL;;AAEE;AACA,cAAI7B,OAAOe,OAAOa,MAAM,KAAb,KAAuBb,OAAOa,MAAM,KAAb,CAAvB,IAA8ChD,SAAzD;AACA,cAAIqB,OAAOc,OAAOa,MAAM,KAAb,KAAuBb,OAAOa,MAAM,KAAb,CAAvB,IAA8C/C,SAAzD;AACA,cAAIqB,QAAQa,OAAOa,MAAM,MAAb,KAAwBb,OAAOa,MAAM,MAAb,CAAxB,IAAgD9C,UAA5D;;AAEA;AACA,cAAIkB,OAAO0C,IAAIb,GAAJ,EAAS7B,IAAT,CAAX;AACA,cAAIC,OAAO0C,IAAId,GAAJ,EAAS5B,IAAT,CAAX;;AAEA;AACA,eAAK2C,SAAL,CAAehB,GAAf,EAAoB5B,IAApB,EAA0BC,IAA1B,EAAgC4B,GAAhC,EAAqC3B,KAArC,EAA4Ca,MAA5C;;AAEA;;AAEF,aAAK,QAAL;;AAEE,cAAI8B,OAAO,6CAAX;AACA,cAAGA,KAAKC,IAAL,CAAUjB,GAAV,CAAH,EAAmB;AACjB;AACA,iBAAKW,SAAL,CAAeZ,GAAf,EAAoBC,GAApB,EAAyBd,MAAzB;AACD,WAHD,MAGO;AACL;AACA,iBAAKgC,QAAL,CAAcnB,GAAd,EAAmBC,GAAnB,EAAwBd,MAAxB;AACD;AACD;;AAEF,aAAK,SAAL;;AAEE,eAAKiC,WAAL,CAAiBpB,GAAjB,EAAsBb,OAAOa,GAAP,CAAtB,EAAmCb,MAAnC;AACA;;AArDJ;AAwDD;AACF,GApED;;AAsEA;AACAvB,gBAAcoB,WAAd,GAA4B,UAASI,MAAT,EAAiB;AAC3C,SAAKK,UAAL,CAAgB4B,MAAhB,EAAwBjC,MAAxB;AACD,GAFD;AAID,CA7MD","file":"p5.gui.60a7a9ab.map","sourceRoot":"../src","sourcesContent":["//\n\n(function() {\n\n  // list of guis\n  var guis = [];\n\n  // default slider params\n  var sliderMin = 0;\n  var sliderMax = 100;\n  var sliderStep = 1;\n\n  // default gui provider\n  var guiProvider = 'QuickSettings';\n\n  // Create a GUI using QuickSettings (or DAT.GUI or ...)\n  p5.prototype.createGui = function(label, x, y, provider) {\n\n    label = label || 'GUI';\n    x = x || 20;\n    y = y || 20;\n    provider = provider || guiProvider;\n\n    var gui;\n\n    // create a gui using the provider\n    if(provider === 'QuickSettings') {\n      if(QuickSettings) {\n        console.log('Creating p5.gui powered by QuickSettings.');\n        gui = new QSGui(label, x, y);\n      } else {\n        console.log('QuickSettings not found. Is the script included in your HTML?');\n        gui = new DummyGui(label, x, y);\n      }\n    } else {\n      console.log('Unknown GUI provider ' + provider);\n      gui = new DummyGui(label, x, y);\n    }\n\n    // add it to the list of guis\n    guis.push(gui);\n\n    // return it\n    return gui;\n\n  };\n\n\n  p5.prototype.removeGui = function(gui) {\n    // TODO: implement this\n  };\n\n  // update defaults used for creation of sliders\n  p5.prototype.sliderRange = function(vmin, vmax, vstep) {\n    sliderMin = vmin;\n    sliderMax = vmax;\n    sliderStep = vstep;\n  };\n\n  // extend default behaviour of noLoop()\n  p5.prototype.noLoop = function() {\n    this._loop = false;\n    for(var i = 0; i < guis.length; i++) {\n      guis[i].noLoop();\n    }\n  };\n\n  // extend default behaviour of loop()\n  p5.prototype.loop = function() {\n    for(var i = 0; i < guis.length; i++) {\n      guis[i].loop();\n    }\n    this._loop = true;\n    this._draw();\n  };\n\n\n  // interface for quicksettings\n  function QSGui(label, x, y) {\n\n    var qs = QuickSettings.create(x, y, label);\n    this.prototype = qs;\n\n    // addGlobals(global1, global2, ...) to add the selected globals\n    this.addGlobals = function() {\n      qs.bindGlobals(arguments);\n    };\n\n    // addObject(object) to add all params of the object\n    // addObject(object, param1, param2, ...) to add selected params\n    this.addObject = function() {\n      // get object\n      object = arguments[0];\n      // convert arguments object to array\n      var params = [];\n      if(arguments.length > 1) {\n        params = Array.prototype.slice.call(arguments)\n        params = params.slice(1);\n      }\n      // if no arguments are provided take all keys of the object\n      if(params.length === 0) {\n        params = object.keys();\n      }\n      qs.bindParams(object, params);\n    };\n\n    // noLoop() to call draw every time the gui changes when we are not looping\n    this.noLoop = function() {\n      qs.setGlobalChangeHandler(draw);\n    };\n\n    this.loop = function() {\n      qs.setGlobalChangeHandler(null);\n    };\n\n    this.show = function() { qs.show(); };\n    this.hide = function() { qs.hide(); };\n    this.toggleVisibility = function() { qs.toggleVisibility(); };\n\n  }\n\n  // Just a Dummy object that provides the GUI interface\n  function DummyGui() {\n    var f = function() {};\n    this.addGlobals = f;\n    this.noLoop = f;\n    this.addObject = f;\n    this.show = f;\n  }\n\n  // Extend Quicksettings\n  // so it can magically create a GUI for parameters passed by name\n  QuickSettings.bindParams = function(object, params) {\n\n    // iterate over all the arguments\n    for(var i = 0; i < params.length; i++) {\n\n      var arg = params[i];\n      var val = object[arg];\n      var typ = typeof val;\n\n      // console.log(typ, arg, val);\n\n      switch(typ) {\n\n        case 'object':\n\n          // color triple ?\n          if(val instanceof Array && val.length === 3 && typeof val[0] === 'number') {\n            // create color according to the current color mode\n            var c = color(val[0], val[1], val[2]);\n            // get decimal RGB values\n            var c2 = c.levels.slice(0,3);\n            // create HTML color code\n            var vcolor = '#' + c2.map(function(value) {\n              return ('0' + value.toString(16)).slice(-2);\n            }).join('');\n            this.bindColor(arg, vcolor, object);\n          } else {\n            // multiple choice drop down list\n            this.bindDropDown(arg, val, object);\n            object[arg] = val[0];\n          }\n          break;\n\n        case 'number':\n\n          // values as defined by magic variables or gui.sliderRange()\n          var vmin = object[arg + 'Min'] || object[arg + 'min'] || sliderMin;\n          var vmax = object[arg + 'Max'] || object[arg + 'max'] || sliderMax;\n          var vstep = object[arg + 'Step'] || object[arg + 'step'] || sliderStep;\n\n          // the actual values can still overrule the limits set by magic\n          var vmin = min(val, vmin);\n          var vmax = max(val, vmax);\n\n          // set the range\n          this.bindRange(arg, vmin, vmax, val, vstep, object);\n\n          break;\n\n        case 'string':\n\n          var HEX6 = /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i;\n          if(HEX6.test(val)) {\n            // HTML color value (such as #ff0000)\n            this.bindColor(arg, val, object);\n          } else {\n            // String value\n            this.bindText(arg, val, object);\n          }\n          break;\n\n        case 'boolean':\n\n          this.bindBoolean(arg, object[arg], object);\n          break;\n\n      }\n    }\n  };\n\n  // bind params that are defined globally\n  QuickSettings.bindGlobals = function(params) {\n    this.bindParams(window, params);\n  };\n\n})();\n"]}